- name: Install application.
  apt: 
    deb: "{{ app_deb_package }}"

- name: Install mysql-client
  apt:
    name: mysql-client
    state: present
    install_recommends: no

- name: Create app user.
  user:
    name: "{{ app_user }}"
    comment: App user
    system: yes

- name: Check if composer.json exists
  stat:
    path: "{{ app_directory }}/composer.json"
  register: run_composer

- include: env.yml

- name: Set bitbucket auth for private composer packages.
  shell: "composer config --global --auth bitbucket-oauth.bitbucket.org {{ bitbucket_consumer_key }} {{ bitbucket_consumer_secret }}"
  when:
    - bitbucket_consumer_key != ""
    - bitbucket_consumer_secret != ""
    - run_composer.stat.exists

- name: Composer Install.
  composer:
    command: install
    no_dev: no
    working_dir: "{{ app_directory }}"
  environment:
    COMPOSER_ALLOW_SUPERUSER: "1"
  when: run_composer.stat.exists

- include: testing.yml
- include: behat.yml

- name: Composer install to remove dev dependecies.
  composer:
    command: install
    working_dir: "{{ app_directory }}"
  when: run_composer.stat.exists

- include: env.yml

- name: Key Generate.
  shell: 'php craft setup/security-key'
  args:
    chdir: "{{ app_directory }}"
  when: laravel_app and app_env.APP_KEY is not defined 

- name: Check if npm package.json exists
  stat:
    path: "{{ app_directory }}/package.json"
  register: run_npm

- name: npm install
  command: "npm install --unsafe-perm"
  args:
    chdir: "{{ app_directory }}"
  when: npm_install and run_npm.stat.exists

- name: npm run prod
  command: "npm run prod"
  args:
    chdir: "{{ app_directory }}"
  when: npm_install and run_npm.stat.exists

- name: Chown Apps directory
  file:
    dest: "{{ app_directory }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    recurse: yes
